# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      # Install Python 3.10.
      - uses: actions/setup-python@v4
        if: ${{ !env.ACT }}
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: "pyproject.toml"
      # Skip caching if using act.
      - uses: actions/setup-python@v4
        if: ${{ env.ACT }}
        with:
          python-version: '3.10'
      - run: pip install ".[develop,pybullet,sapien]"

      # Run black.
      - name: Code Quality
        # run: python -m black partnet_mobility_utils/ tests/ --check
        run: python -m black partnet_mobility_utils/ --check

      # Run MyPy typechecking.
      - name: MyPy Typechecking
        # run: python -m mypy partnet_mobility_utils/ tests/
        run: python -m mypy partnet_mobility_utils/

      # Run tests.
      - name: Test with pytest
        run: python -m pytest

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        if: ${{ !env.ACT }}
        uses: actions/configure-pages@v1
      # Install Python 3.10.
      - uses: actions/setup-python@v4
        if: ${{ !env.ACT }}
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: "pyproject.toml"
      # Skip caching if using act.
      - uses: actions/setup-python@v4
        if: ${{ env.ACT }}
        with:
          python-version: '3.10'
      - run: pip install -e ".[deploy_docs]"
      - name: Build mkdocs site
        working-directory: docs
        run: mkdocs build
      - name: Upload artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload just the generated site.
          path: './docs/site'
      - name: Deploy to GitHub Pages
        if: ${{ !env.ACT }}
        id: deployment
        uses: actions/deploy-pages@main
